import 'package:mash/mash/domain/entities/profile/student_detail_entity.dart';

class StudentDetailModel extends StudentDetailEntity {
  const StudentDetailModel(
      {required super.userType,
      required super.academicId,
      required super.usrId,
      required super.studentId,
      required super.admissionNo,
      required super.studentName,
      required super.rollNo,
      required super.compId,
      required super.roleId,
      required super.activeStatus,
      required super.profilePhoto,
      required super.email,
      required super.mobile,
      required super.parentId,
      required super.classId,
      required super.className,
      required super.divisionId,
      required super.divisionName,
      required super.medium,
      required super.classTeacherId,
      required super.classTeacher,
      required super.dob,
      required super.motherName,
      required super.fatherName,
      required super.fatherMobile,
      required super.motherMobile,
      required super.fatherEmail,
      required super.motherEmail,
      required super.perAddress1,
      required super.localGuardianName,
      required super.callFromTime,
      required super.callToTime,
      required super.isCall,
      required super.totWorkingDays,
      required super.totalPresent,
      required super.totalAbsent,
      required super.halfDays,
      required super.attPercen,
      required super.strength,
      required super.totalHolidays,
      required super.totalEvents,
      required super.bloodGroup});

  factory StudentDetailModel.fromJson(Map<String, dynamic> json) {
    return StudentDetailModel(
        userType: json['USER_TYPE'],
        academicId: json['ACADEMIC_ID'],
        usrId: json['USR_ID'],
        studentId: json['STUDENT_ID'],
        admissionNo: json['ADMISSION_NO'],
        studentName: json['STUDENT_NAME'],
        rollNo: json['ROLL_NO'],
        compId: json['COMP_ID'],
        roleId: json['ROLE_ID'],
        activeStatus: json['ACTIVE_STATUS'],
        profilePhoto: json['PROFILE_PHOTO'],
        email: json['E_MAIL'],
        mobile: json['MOBILE'],
        parentId: json['PARENT_ID'],
        classId: json['CLASS_ID'],
        className: json['CLASS_NAME'],
        divisionId: json['DIVISION_ID'],
        divisionName: json['DIVISION_NAME'],
        medium: json['MEDIUM'],
        classTeacherId: json['CLASS_TEACHER_ID'],
        classTeacher: json['CLASS_TEACHER'],
        dob: json['DOB'],
        motherName: json['MOTHER_NM'],
        fatherName: json['FATHER_NM'],
        fatherMobile: json['FATHER_MOB'],
        motherMobile: json['MOTHER_MOB'],
        fatherEmail: json['FATHER_EMAIL'],
        motherEmail: json['MOTHER_EMAIL'],
        perAddress1: json['PER_ADDRESS1'],
        localGuardianName: json['LOCAL_GUARDIAN_NM'],
        callFromTime: json['CALL_FROM_TIME'],
        callToTime: json['CALL_TO_TIME'],
        isCall: json['IS_CALL'],
        totWorkingDays: json['TOT_WORKING_DAYS'],
        totalPresent: json['TOTAL_PRESENT'],
        totalAbsent: json['TOTAL_ABSENT'] ?? '',
        halfDays: json['HALF_DAYS'],
        attPercen: json['ATTPER'],
        strength: json['CUR_CLS_STRENGTH'],
        totalEvents: json['TOTAL_EVENTS'],
        totalHolidays: json['TOTAL_HODIDAYS'],
        bloodGroup: json['BLOODGROUP']);
  }

  /*factory StudentDetailModel.fromEntity(StudentDetailEntity json) {
    return StudentDetailModel(
      totalHolidays: json.totalHolidays,
      strength: json.strength,
      totalEvents: json.totalEvents,
      userType: json.userType,
      academicId: json.academicId,
      usrId: json.usrId,
      studentId: json.studentId,
      admissionNo: json.admissionNo,
      studentName: json.studentName,
      rollNo: json.rollNo,
      compId: json.compId,
      roleId: json.roleId,
      activeStatus: json.activeStatus,
      profilePhoto: json.profilePhoto,
      email: json.email,
      mobile: json.mobile,
      parentId: json.parentId,
      classId: json.classId,
      className: json.className,
      divisionId: json.divisionId,
      divisionName: json.divisionName,
      medium: json.medium,
      classTeacherId: json.classTeacherId,
      classTeacher: json.classTeacher,
      dob: json.dob,
      motherName: json.motherName,
      fatherName: json.fatherName,
      fatherMobile: json.fatherMobile,
      motherMobile: json.motherMobile,
      fatherEmail: json.fatherEmail,
      motherEmail: json.motherEmail,
      perAddress1: json.perAddress1,
      localGuardianName: json.localGuardianName,
      callFromTime: json.callFromTime,
      callToTime: json.callToTime,
      isCall: json.isCall,
      totWorkingDays: json.totWorkingDays,
      totalPresent: json.totalPresent,
      totalAbsent: json.totalAbsent,
      halfDays: json.halfDays,
      attPercen: json.attPercen,
      strength:
    );
  }*/

  Map<String, dynamic> toJson() {
    return {
      'USER_TYPE': userType,
      'ACADEMIC_ID': academicId,
      'USR_ID': usrId,
      'STUDENT_ID': studentId,
      'ADMISSION_NO': admissionNo,
      'STUDENT_NAME': studentName,
      'ROLL_NO': rollNo,
      'COMP_ID': compId,
      'ROLE_ID': roleId,
      'ACTIVE_STATUS': activeStatus,
      'PROFILE_PHOTO': profilePhoto,
      'E_MAIL': email,
      'MOBILE': mobile,
      'PARENT_ID': parentId,
      'CLASS_ID': classId,
      'CLASS_NAME': className,
      'DIVISION_ID': divisionId,
      'DIVISION_NAME': divisionName,
      'MEDIUM': medium,
      'CLASS_TEACHER_ID': classTeacherId,
      'CLASS_TEACHER': classTeacher,
      'DOB': dob,
      'MOTHER_NM': motherName,
      'FATHER_NM': fatherName,
      'FATHER_MOB': fatherMobile,
      'MOTHER_MOB': motherMobile,
      'FATHER_EMAIL': fatherEmail,
      'MOTHER_EMAIL': motherEmail,
      'PER_ADDRESS1': perAddress1,
      'LOCAL_GUARDIAN_NM': localGuardianName,
      'CALL_FROM_TIME': callFromTime,
      'CALL_TO_TIME': callToTime,
      'IS_CALL': isCall,
      'TOT_WORKING_DAYS': totWorkingDays,
      'TOTAL_PRESENT': totalPresent,
      'TOTAL_ABSENT': totalAbsent,
      'HALF_DAYS': halfDays,
      'ATTPER': attPercen,
    };
  }
}
